import React, {useEffect, useState, useRef, useCallback} from "react";
import "./index.css";

function App2() {

    const [numbers, setNumbers] = useState([1, 2, 3, 4, 5]);
    //—Å—Å—ã–ª–∫–∞ –Ω–∞ –î–û–ú —ç–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ulRef
    const ulRef = useRef();
    const numbersRef = useRef();

    //–ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–¥–µ–Ω–µ—Ä–µ –ø—Ä–∏–∫—Ä—É—á–∏–≤–∞–π –≤ current —ç—Ç–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ numbers
    numbersRef.current = numbers;


    const addNumber = () => {
        const lastNumber = numbers[numbers.length - 1];
        setNumbers([...numbers, lastNumber + 1]);
    };

    const handleScroll = useCallback(() => {
        console.log('–ë—ã–ª —Å–∫—Ä–æ–ª–ª', numbersRef.current);
    }, []);

    useEffect(() => {
        //ulElem.document.querySelector('ul');
        //–Ω–∞ –î–û–ú —ç–ª–µ–º–µ–Ω—Ç–µ (—É –Ω–∞—Å ul), –Ω–∞ —á–µ–º —É–≥–æ–¥–Ω–æ, –≤ ref –º—ã –ø–æ–º–µ—â–∞–µ–º useRef, –∫–æ—Ç –±—É–¥–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å
        //–∑–∞–¥–∞–≤–∞—Ç—å –≤ current —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π –î–û–ú-—ç–ª–µ–º–µ–Ω—Ç
        ulRef.current.addEventListener('scroll', handleScroll);
    }, []);

    const removeScroll = () => {
        //ulElem.removeEventListener('scroll', handleScroll);
        ulRef.current.removeEventListener('scroll', handleScroll);
    };

    return (
        <div className="App">
            <ul ref={ulRef}>
                {numbers.map((n, index) => (
                    <li key={index}>{n}</li>
                ))}
            </ul>
            <button onClick={addNumber}>‚úÖ Add Number</button>
            <button onClick={removeScroll}>‚ùå Don't follow</button>
        </div>
    );
}

export default App2;

//useRef - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –î–û–ú-—ç–ª–µ–º–µ–Ω—Ç–∞–º–∏; –≤ –Ω–µ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –î–û–ú —ç–ª–µ–º–µ–Ω—Ç
//        –∏ –æ–Ω–∞ –Ω–µ —Ç–µ—Ä—è–µ—Ç—Å—è, –µ—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ê—Ä—Ä –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –ö.
//useRef - –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥—Ä –¥–∞–Ω–Ω—ã—Ö (—Ö—Ä–∞–Ω–∏—Ç—å —á–∏—Å–ª–æ, –æ–±—ä–µ–∫—Ç—ã–± –µ—â–µ.... –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â–µ)

export function App3() {

    const [numbers, setNumbers] = useState([1, 2, 3, 4, 5]);

    const timerRef = useRef();

    const addNumber = () => {
        setNumbers((prev) => [...prev, prev[prev.length - 1] + 1]);
    };

    const start = () => {
        timerRef.current = setInterval(addNumber, 1000);
    };

    const stop = () => {
        console.log(timerRef.current);
        clearInterval(timerRef.current);
    };

    return (
        <div className="App">
            <ul>
                {numbers.map((n, index) => (
                    <li key={index}>{n}</li>
                ))}
            </ul>
            <button onClick={addNumber}>‚úÖ Add Number</button>
            <button onClick={start}>üöÄ START</button>
            <button onClick={stop}>üïó STOP</button>
        </div>
    );
}

//useCallback - —Å–ª–µ–¥–∏—Ç –Ω—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é